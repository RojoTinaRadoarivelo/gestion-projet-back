model Projects {
    id          String    @id @default(uuid()) @db.Uuid
    name        String    @unique @db.VarChar(120)
    description String?   @db.Text
    tag         String?   @db.VarChar(120)
    logo        String?   @db.VarChar(250)
    createdAt   DateTime  @default(now())
    updatedAt   DateTime? @updatedAt

    HasProject HasProject[]
    Tasks      Tasks[]
}

model HasProject {
    id         String    @id @default(uuid()) @db.Uuid
    user_id    String?   @db.Uuid
    user       Users?    @relation(fields: [user_id], references: [id], onUpdate: Cascade, onDelete: SetNull)
    role_id    String    @db.Uuid
    role       UserRoles @relation(fields: [role_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
    project_id String?   @db.Uuid
    project    Projects? @relation(fields: [project_id], references: [id], onUpdate: Cascade, onDelete: SetNull)
    createdAt  DateTime  @default(now())
    updatedAt  DateTime? @updatedAt
}

model UserRoles {
    id          String    @id @default(uuid()) @db.Uuid
    role        String    @unique @db.VarChar(120)
    description String?   @db.Text
    createdAt   DateTime  @default(now())
    updatedAt   DateTime? @updatedAt

    HasProject HasProject[]
}
